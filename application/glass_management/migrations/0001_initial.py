# Generated by Django 4.1.3 on 2025-03-02 15:37

import application.glass_management.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("warehouse", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EyeglassFrameCalculation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "frame_size",
                    models.SmallIntegerField(
                        choices=[(0, "大框"), (1, "中框"), (2, "小框")],
                        null=True,
                        verbose_name="镜框大小",
                    ),
                ),
                (
                    "left_curvature",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左平均曲率",
                    ),
                ),
                (
                    "right_curvature",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右平均曲率",
                    ),
                ),
                (
                    "left_factors",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左形状因子",
                    ),
                ),
                (
                    "right_factors",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右形状因子",
                    ),
                ),
                (
                    "height_width_proportion",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="高宽比",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFrameCoordinate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "front_points",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='\n        存储格式示例：\n        {\n            "frame_bounding_points": [[-1, -1], [-1, -1]],\n            "pile_points": [[-1, -1], [-1, -1]],\n            "lens_center_points": [[-1, -1], [-1, -1]],\n            "lens_bounding_points": [[[-1, -1], [-1, -1]], [[-1, -1], [-1, -1]]],\n            "lens_diagonal_points": [[[-1, -1], [-1, -1]], [[-1, -1], [-1, -1]]],\n            "lens_top_points": [[-1, -1], [-1, -1]],\n            "top_points": [[-1, -1], [-1, -1]],\n            "bottom_points": [[-1, -1], [-1, -1]],\n            "lens_bottom_points": [[-1, -1], [-1, -1]],\n            "lens_side_points": [[[-1, -1], [-1, -1]], [[-1, -1], [-1, -1]]]\n        }\n        ',
                        verbose_name="正视图坐标数据",
                    ),
                ),
                (
                    "left_points",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='\n        存储格式示例：\n        {\n            "head_point": [-1, -1],\n            "down_point": [-1, -1],\n            "turning_point": [-1, -1],\n            "tail_point": [-1, -1]\n        }\n        ',
                        verbose_name="侧视图坐标数据",
                    ),
                ),
                (
                    "up_points",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='\n        存储格式示例：\n        {\n            "pile_points": [[-1, -1], [-1, -1]],\n            "temporal_points": [[-1, -1], [-1, -1]],\n            "turning_points": [[-1, -1], [-1, -1]],\n            "tail_points": [[-1, -1], [-1, -1]],\n            "bridge_point": [-1, -1]\n        }\n        ',
                        verbose_name="俯视图坐标数据",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFrameEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "sku",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="镜架SKU"
                    ),
                ),
                ("brand", models.CharField(max_length=255, verbose_name="镜架品牌")),
                (
                    "model_type",
                    models.CharField(max_length=255, verbose_name="镜架型号"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="售价"
                    ),
                ),
                (
                    "material",
                    models.SmallIntegerField(
                        choices=[
                            (0, "天然材料"),
                            (1, "贵金属"),
                            (2, "板材"),
                            (3, "钢材"),
                            (4, "钛材"),
                            (5, "合金"),
                            (6, "其他材料"),
                        ],
                        verbose_name="镜架材质",
                    ),
                ),
                (
                    "color",
                    models.SmallIntegerField(
                        choices=[
                            (0, "玳瑁色"),
                            (1, "双色"),
                            (2, "多彩"),
                            (3, "深色"),
                            (4, "浅色"),
                        ],
                        verbose_name="镜架颜色",
                    ),
                ),
                (
                    "shape",
                    models.SmallIntegerField(
                        choices=[
                            (0, "飞行员形"),
                            (1, "不规则形"),
                            (2, "圆形"),
                            (3, "偏圆形"),
                            (4, "方形"),
                            (5, "偏方形"),
                        ],
                        verbose_name="镜架形状",
                    ),
                ),
                ("isnosepad", models.BooleanField(verbose_name="是否带鼻托")),
                (
                    "is_transparent",
                    models.IntegerField(
                        choices=[(0, "不透明"), (1, "全透明"), (2, "有色透明")],
                        verbose_name="是否透明",
                    ),
                ),
                (
                    "frame_type",
                    models.IntegerField(
                        choices=[(0, "全框"), (1, "半框"), (2, "无框")],
                        verbose_name="镜框类型：0-全框 1-半框 2-无框",
                    ),
                ),
                (
                    "lens_radian",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="撑片弧度",
                    ),
                ),
                (
                    "lens_width_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜圈宽度",
                    ),
                ),
                (
                    "bridge_width_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="鼻梁宽度",
                    ),
                ),
                (
                    "temple_length_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜腿长度",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, verbose_name="重量"
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0, verbose_name="库存")),
                (
                    "pixel_measurement_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="像素测量数据状态",
                    ),
                ),
                (
                    "millimeter_measurement_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="毫米测量数据状态",
                    ),
                ),
                (
                    "calculation_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="计算数据状态",
                    ),
                ),
                (
                    "coordinate_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="坐标数据状态",
                    ),
                ),
                (
                    "image_mask_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="mask图片数据状态",
                    ),
                ),
                (
                    "image_seg_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="分割图片数据状态",
                    ),
                ),
                (
                    "image_beautify_state",
                    models.SmallIntegerField(
                        choices=[
                            (0, "待计算"),
                            (1, "计算中"),
                            (2, "计算完成"),
                            (3, "计算失败"),
                        ],
                        default=0,
                        verbose_name="美化图片数据状态",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFrameImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "frontview",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe",
                            application.glass_management.models.ViewType["FRONT"],
                            "jpg",
                        ),
                        verbose_name="正视图",
                    ),
                ),
                (
                    "sideview",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe",
                            application.glass_management.models.ViewType["SIDE"],
                            "jpg",
                        ),
                        verbose_name="侧视图",
                    ),
                ),
                (
                    "topview",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe",
                            application.glass_management.models.ViewType["TOP"],
                            "jpg",
                        ),
                        verbose_name="俯视图",
                    ),
                ),
                (
                    "frame",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_mask",
                            application.glass_management.models.MaskType["FRAME"],
                            "png",
                        ),
                        verbose_name="镜框mask图",
                    ),
                ),
                (
                    "lens",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_mask",
                            application.glass_management.models.MaskType["LENS"],
                            "png",
                        ),
                        verbose_name="镜圈mask图",
                    ),
                ),
                (
                    "templeWf",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_mask",
                            application.glass_management.models.MaskType["TEMPLE"],
                            "png",
                        ),
                        verbose_name="镜腿mask图",
                    ),
                ),
                (
                    "nose",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_mask",
                            application.glass_management.models.MaskType["NOSE"],
                            "png",
                        ),
                        verbose_name="鼻托mask图",
                    ),
                ),
                (
                    "front",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_mask",
                            application.glass_management.models.MaskType["FRONT"],
                            "png",
                        ),
                        verbose_name="正视图mask图",
                    ),
                ),
                (
                    "frontview_seg",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_seg",
                            application.glass_management.models.ViewType["FRONT"],
                            "png",
                        ),
                        verbose_name="正视图分割图",
                    ),
                ),
                (
                    "sideview_seg",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_seg",
                            application.glass_management.models.ViewType["SIDE"],
                            "png",
                        ),
                        verbose_name="侧视图分割图",
                    ),
                ),
                (
                    "frontview_beautify",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_beautify",
                            application.glass_management.models.ViewType["FRONT"],
                            "png",
                        ),
                        verbose_name="正视图美化图",
                    ),
                ),
                (
                    "sideview_beautify",
                    models.ImageField(
                        null=True,
                        upload_to=application.glass_management.models.EyeglassPathGenerator(
                            "images/eyeglassframe_beautify",
                            application.glass_management.models.ViewType["SIDE"],
                            "png",
                        ),
                        verbose_name="侧视图美化图",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFrameMillimeterMeasurement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "frame_height",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框高度",
                    ),
                ),
                (
                    "frame_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框宽度",
                    ),
                ),
                (
                    "pile_height_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左桩头高度",
                    ),
                ),
                (
                    "pile_height_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右桩头高度",
                    ),
                ),
                (
                    "frame_top_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框顶部宽度",
                    ),
                ),
                (
                    "lens_width_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈宽度",
                    ),
                ),
                (
                    "lens_width_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈宽度",
                    ),
                ),
                (
                    "lens_height_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈高度",
                    ),
                ),
                (
                    "lens_height_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈高度",
                    ),
                ),
                (
                    "lens_diagonal_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈对角线长度",
                    ),
                ),
                (
                    "lens_diagonal_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈对角线长度",
                    ),
                ),
                (
                    "lens_area_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈面积",
                    ),
                ),
                (
                    "lens_area_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈面积",
                    ),
                ),
                (
                    "bridge_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="鼻梁宽度",
                    ),
                ),
                (
                    "vertical_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="垂俯角",
                    ),
                ),
                (
                    "forward_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="前倾角",
                    ),
                ),
                (
                    "temple_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜腿角",
                    ),
                ),
                (
                    "drop_length",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="垂长"
                    ),
                ),
                (
                    "face_angle",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="面弯"
                    ),
                ),
                (
                    "sagittal_angle_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左垂内角",
                    ),
                ),
                (
                    "sagittal_angle_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右垂内角",
                    ),
                ),
                (
                    "temple_length_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜腿长度",
                    ),
                ),
                (
                    "temple_length_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜腿长度",
                    ),
                ),
                (
                    "temporal_width",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="颞距"
                    ),
                ),
                (
                    "spread_angle_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜腿外张角",
                    ),
                ),
                (
                    "spread_angle_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜腿外张角",
                    ),
                ),
                (
                    "pile_distance",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="桩头距离",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFramePixelMeasurement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "frame_height",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框高度",
                    ),
                ),
                (
                    "frame_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框宽度",
                    ),
                ),
                (
                    "pile_height_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左桩头高度",
                    ),
                ),
                (
                    "pile_height_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右桩头高度",
                    ),
                ),
                (
                    "frame_top_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜框顶部宽度",
                    ),
                ),
                (
                    "lens_width_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈宽度",
                    ),
                ),
                (
                    "lens_width_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈宽度",
                    ),
                ),
                (
                    "lens_height_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈高度",
                    ),
                ),
                (
                    "lens_height_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈高度",
                    ),
                ),
                (
                    "lens_diagonal_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈对角线长度",
                    ),
                ),
                (
                    "lens_diagonal_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈对角线长度",
                    ),
                ),
                (
                    "lens_area_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜圈面积",
                    ),
                ),
                (
                    "lens_area_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜圈面积",
                    ),
                ),
                (
                    "bridge_width",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="鼻梁宽度",
                    ),
                ),
                (
                    "vertical_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="垂俯角",
                    ),
                ),
                (
                    "forward_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="前倾角",
                    ),
                ),
                (
                    "temple_angle",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜腿角",
                    ),
                ),
                (
                    "drop_length",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="垂长"
                    ),
                ),
                (
                    "face_angle",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="面弯"
                    ),
                ),
                (
                    "sagittal_angle_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左垂内角",
                    ),
                ),
                (
                    "sagittal_angle_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右垂内角",
                    ),
                ),
                (
                    "temple_length_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜腿长度",
                    ),
                ),
                (
                    "temple_length_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜腿长度",
                    ),
                ),
                (
                    "temporal_width",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, null=True, verbose_name="颞距"
                    ),
                ),
                (
                    "spread_angle_left",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="左镜腿外张角",
                    ),
                ),
                (
                    "spread_angle_right",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="右镜腿外张角",
                    ),
                ),
                (
                    "pile_distance",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="桩头距离",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EyeglassFramePreloadData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键ID",
                    ),
                ),
                ("create_user", models.IntegerField(default=0, verbose_name="创建人")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True,
                        max_length=11,
                        null=True,
                        verbose_name="创建时间",
                    ),
                ),
                ("update_user", models.IntegerField(default=0, verbose_name="更新人")),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, max_length=11, null=True, verbose_name="更新时间"
                    ),
                ),
                ("is_delete", models.BooleanField(default=0, verbose_name="逻辑删除")),
                (
                    "batch_no",
                    models.CharField(
                        default=0,
                        help_text="批次号格式：BATCH_YYYYMMDD_HHMMSS",
                        max_length=255,
                        verbose_name="Excel导入的批次号",
                    ),
                ),
                ("sku", models.CharField(max_length=255, verbose_name="镜架SKU")),
                (
                    "brand",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="镜架品牌"
                    ),
                ),
                (
                    "model_type",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="镜架型号"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="售价",
                    ),
                ),
                (
                    "material",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (0, "天然材料"),
                            (1, "贵金属"),
                            (2, "板材"),
                            (3, "钢材"),
                            (4, "钛材"),
                            (5, "合金"),
                            (6, "其他材料"),
                        ],
                        null=True,
                        verbose_name="镜架材质",
                    ),
                ),
                (
                    "color",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (0, "玳瑁色"),
                            (1, "双色"),
                            (2, "多彩"),
                            (3, "深色"),
                            (4, "浅色"),
                        ],
                        null=True,
                        verbose_name="镜架颜色",
                    ),
                ),
                (
                    "shape",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[
                            (0, "飞行员形"),
                            (1, "不规则形"),
                            (2, "圆形"),
                            (3, "偏圆形"),
                            (4, "方形"),
                            (5, "偏方形"),
                        ],
                        null=True,
                        verbose_name="镜架形状",
                    ),
                ),
                (
                    "isnosepad",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="是否带鼻托"
                    ),
                ),
                (
                    "is_transparent",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[(0, "不透明"), (1, "全透明"), (2, "有色透明")],
                        null=True,
                        verbose_name="透明度",
                    ),
                ),
                (
                    "frame_type",
                    models.SmallIntegerField(
                        blank=True,
                        choices=[(0, "全框"), (1, "半框"), (2, "无框")],
                        null=True,
                        verbose_name="镜框类型：0-全框 1-半框 2-无框",
                    ),
                ),
                (
                    "lens_radian",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="撑片弧度",
                    ),
                ),
                (
                    "lens_width_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜圈宽度",
                    ),
                ),
                (
                    "bridge_width_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="鼻梁宽度",
                    ),
                ),
                (
                    "temple_length_st",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="镜腿长度",
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(
                        blank=True, default=0, null=True, verbose_name="库存"
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="eyeglassframepreloaddata",
            index=models.Index(
                fields=["batch_no", "sku"], name="glass_manag_batch_n_be830e_idx"
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframepixelmeasurement",
            name="entry",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="glass_management.eyeglassframeentry",
                verbose_name="镜架基本信息",
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframemillimetermeasurement",
            name="entry",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="glass_management.eyeglassframeentry",
                verbose_name="镜架基本信息",
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframeimage",
            name="entry",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="glass_management.eyeglassframeentry",
                verbose_name="镜架基本信息",
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframeentry",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="warehouse.warehouse",
                verbose_name="所属仓库",
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframecoordinate",
            name="entry",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="glass_management.eyeglassframeentry",
                verbose_name="镜架基本信息",
            ),
        ),
        migrations.AddField(
            model_name="eyeglassframecalculation",
            name="entry",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="glass_management.eyeglassframeentry",
                verbose_name="镜架基本信息",
            ),
        ),
        migrations.AddIndex(
            model_name="eyeglassframepixelmeasurement",
            index=models.Index(fields=["entry"], name="glass_manag_entry_i_1fc906_idx"),
        ),
        migrations.AddIndex(
            model_name="eyeglassframemillimetermeasurement",
            index=models.Index(fields=["entry"], name="glass_manag_entry_i_15ac8c_idx"),
        ),
        migrations.AddIndex(
            model_name="eyeglassframeimage",
            index=models.Index(fields=["entry"], name="glass_manag_entry_i_ded1da_idx"),
        ),
        migrations.AddIndex(
            model_name="eyeglassframeentry",
            index=models.Index(fields=["id", "sku"], name="glass_manag_id_f8493d_idx"),
        ),
        migrations.AddIndex(
            model_name="eyeglassframecoordinate",
            index=models.Index(fields=["entry"], name="glass_manag_entry_i_13d5d0_idx"),
        ),
        migrations.AddIndex(
            model_name="eyeglassframecalculation",
            index=models.Index(fields=["entry"], name="glass_manag_entry_i_7c1bbb_idx"),
        ),
    ]
